import{createAsyncThunk}from"@reduxjs/toolkit";import axios from"axios";const baseUrl="https://connections-api.goit.global",setAuthHeader=token=>{axios.defaults.headers.common.Authorization=`Bearer ${token}`},clearAuthHeader=()=>{axios.defaults.headers.common.Authorization=""};export const register=createAsyncThunk("auth/register",(async(userSignUp,{rejectWithValue:rejectWithValue})=>{try{const response=await axios.post(`${baseUrl}/users/signup`,userSignUp);return setAuthHeader(response.data.token),response.data}catch(error){return rejectWithValue(error.response.data)}}));export const login=createAsyncThunk("auth/login",(async(userLogin,{rejectWithValue:rejectWithValue})=>{try{const response=await axios.post(`${baseUrl}/users/login`,userLogin);return setAuthHeader(response.data.token),response.data}catch(error){return rejectWithValue(error.response.data)}}));export const logOut=createAsyncThunk("auth/logout",(async(_,{getState:getState,rejectWithValue:rejectWithValue})=>{try{return(await axios.post(`${baseUrl}/users/logout`,null)).data}catch(error){return rejectWithValue(error.response.data)}}));export const refreshUser=createAsyncThunk("auth/refreshUser",(async(_,{getState:getState,rejectWithValue:rejectWithValue})=>{try{const token=getState().auth.token;if(!token)return rejectWithValue();setAuthHeader(token);return(await axios.get(`${baseUrl}/users/current`)).data}catch(error){return rejectWithValue(error.response.data)}}));